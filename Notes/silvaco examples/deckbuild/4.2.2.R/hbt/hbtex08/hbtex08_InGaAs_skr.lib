#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <ctype.h>
#include <malloc.h>
#include <string.h>
#include <template.h>

/* The SKR mobility functions are based on M. Sotoodeh, A. H. Khalid, and 
 *  A. A. Rezazadeh, "Empirical low-field mobility model for III-V compounds applicable 
 *  in device simulation codes", J. Appl. Phys. vol. 87, p. 2890.
 */

/*
 * Composition, temperature and doping dependent electron mobility
 * Statement: MATERIAL
 * Parameter: F.CONMUN
 * Arguments:
 * xcomp      composition fraction x
 * ycomp      composition fraction y
 * temp       temperature (K)
 * nd         net concentration of donors (per cc)
 * na         net concentration of acceptors (per cc)
 * x          location x (microns)
 * y          location y (microns)
 * taun       electron SRH lifetime (s)
 * *mun       electron mobility
 */
int conmun(double xcomp,double ycomp,double temp,double nd,double na,double x,double y,double taun,double *mun)
{
	double mumax, mumin, Nref, lambda, theta1, theta2, Ntotal, t1, t2, logNref;
	mumax = xcomp*9400 + (1 - xcomp)*34000 - xcomp*(1-xcomp)*33873.9;
	mumin = xcomp*500 + (1 - xcomp)*1000 - xcomp*(1-xcomp)*1866.7;
	logNref = xcomp*log10(6.0e16) + (1 - xcomp)*log10(1.1e18) - xcomp*(1 - xcomp)*1.34; 
	Nref = pow(10,logNref);
/*	printf("%4.2f %7.1f %6.1f %6.3f %8.2e\n", xcomp, mumax, mumin, logNref, Nref);*/
	lambda = xcomp*0.394 + (1 - xcomp)*0.32 + xcomp*(1-xcomp)*0.503;
	theta1 = xcomp*2.1 + (1 - xcomp)*1.57 - xcomp*(1 - xcomp)*0.92;
	theta2 = 3.0 + xcomp*(1-xcomp)*2.73;
/*  printf("%4.2f %7.1f %6.1f %8.2e %5.3f %4.2f %4.2f\n", xcomp, mumax, mumin, Nref, lambda, theta1, theta2);*/
	Ntotal = nd + na;
	t1 = pow(300/temp,theta1);
	t2 = pow(temp/300,theta2);
	*mun = mumin + (mumax*t1 - mumin)/(1 + pow(Ntotal/(Nref*t2),lambda));
	return(0);                /* 0 - ok */
}

/*
 * Composition, temperature and doping dependent hole mobility
 * Statement: MATERIAL
 * Parameter: F.CONMUP
 * Arguments:
 * xcomp      composition fraction x
 * ycomp      composition fraction y
 * temp       temperature (K)
 * nd         net concentration of donors (per cc)
 * na         net concentration of acceptors (per cc)
 * x          location x (microns)
 * y          location y (microns)
 * taup       hole SRH lifetime (s)
 * *mup       hole mobility
 */
int conmup(double xcomp,double ycomp,double temp,double nd,double na,double x,double y,double taup,double *mup)
{
	double mumax, mumin, Nref, lambda, theta1, theta2, Ntotal, t1, t2, logNref;
	mumax = xcomp*491.5 + (1 - xcomp)*530 - xcomp*(1-xcomp)*770.4;
	mumin = 20 - xcomp*(1-xcomp)*40.145;
	logNref = xcomp*log10(1.48e17) + (1 - xcomp)*log10(1.1e17) + xcomp*(1 - xcomp)*2.361; 
	Nref = pow(10,logNref);
/*	printf("%4.2f %7.1f %6.1f %6.3f %8.2e\n", xcomp, mumax, mumin, logNref, Nref);*/
	lambda = xcomp*0.38 + (1 - xcomp)*0.46 - xcomp*(1-xcomp)*0.078;
	theta1 = xcomp*2.2 + (1 - xcomp)*2.3 - xcomp*(1 - xcomp)*2.662;
	theta2 = 3.0;
	Ntotal = nd + na;
	t1 = pow(300/temp,theta1);
	t2 = pow(temp/300,theta2);
	*mup = mumin + (mumax*t1 - mumin)/(1 + pow(Ntotal/(Nref*t2),lambda));
	return(0);                /* 0 - ok */
}

