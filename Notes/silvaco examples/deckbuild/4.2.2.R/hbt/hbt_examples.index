{section} HBT : HBT Application Examples 


{subsection} hbtex01.in : Si/SiGe HBT Gummel Plot Simulation


Requires: Blaze
{newline}
Minimum Versions: Atlas 5.26.1.R

This example demonstrates the simulation of a SiGe HBT to extract Ic
and Ib versus Vbe and plots the bipolar gain. It shows:

{bullet} Device formation using Atlas syntax
{newline}
{bullet} Specification of a graded SiGe composition fraction
{newline}
{bullet} Selection of models for SiGe
{newline}
{bullet} DC simulation for Ic and Ib versus Vbe 

The majority of this example is similar to the silicon bipolar Gummel
plot example described in the BJT section. This description will focus
on the specific SiGe syntax. More details on various types of bipolar
simulation can be found in the BJT examples section.

The 
{bold} region
statement is used to define the SiGe region in the base of an NPN
bipolar transistor. The argument of the 'material' parameter is
case-sensitive: SiGe is acceptable, but sige is not. The composition fraction 
of the area inside of x.min, x.max, y.min and y.max is defined by the 
{bold} x.composition
parameter. Outside of this box the Ge composition fraction rolls of
linearly to zero over the distance specified by the
{bold} grad.*
parameters. For more details on grad.* parameters, see the Blaze chapter
of the manual.  For non-linear composition fraction variations, DEVEDIT
is needed.

The material parameters for SiGe are selected by
{bold} material material=SiGe ...
. Here the lifetime is set differently for SiGe and Si regions. In this
example common models are used between Si and SiGe regions, but this is
not compulsory. The material parameter of the models statement can be
used to set separate models for each material.

The electrical part of the example is the same as the silicon examples
referenced above. The solution file stored at the final voltage can
be used to examine the band diagram of the HBT. The statement
{newline}
{bold} output con.band val.band
{newline}
enables the conduction and valence band edge energies to be stored in
the solution file. This command is recommended for all heterojunction
simulations in Blaze.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} hbtex02.in : AlGaAs/GaAs HBT Gummel Plot Simulation

Requires: Blaze
{newline}
Minimum Versions: Atlas 5.26.1.R

This example demonstrates the simulation of an AlGaAs/GaAs HBT to
extract Ic and Ib versus Vbe and plots the bipolar gain. It shows:

{bullet} Device formation using Atlas syntax
{newline}
{bullet} Specification of s graded AlGaAs composition fraction
{newline}
{bullet} Selection of models for AlGaAs and GaAs
{newline}
{bullet} DC simulation for Ic and Ib versus Vbe 

As in the previous example the majority of this example is similar to
the silicon bipolar Gummel plot example described in the BJT section.
This description will focus on specific GaAs and AlGaAs syntax. More details
on various types of bipolar simulation can be found in the BJT examples
section.

The graded AlGaAs composition fraction is set in the 
{bold} region 
statement. The parameter
{bold} x.comp
defines the Al content inside the box defined by x.min, x.max, y.min
and y.max. Outside the box the Al content falls linearly to zero in a
distance
{bold} grad.*. 
For more details on grad.* parameters see the Blaze chapter of the
manual. Non-linear composition gradings can only be handled by DEVEDIT.
Since devices constructed in Atlas syntax must be rectangular, a silicon
dioxide region is used to fill the space to the left of the emitter.

The
{bold} material
statement sets the low-field mobilities for the AlGaAs region. Note
that the concentration dependent mobility model 'conmob' can only be
applied to GaAs so two model statements are used to define the models
used in all regions and then just the GaAs regions.

The
{bold} model
statements are used to specify the following set of models: field
dependent mobility, SRH and optical recombination. Optical
recombination (also known as band to band recombination) is an
important effect in III-V devices. The parameter 'optr' sets this model
on. 

The electrical simulation proceeds as in the silicon BJT example
referenced above. Results can be seem in TonyPlot.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} hbtex03.in : AlGaAs/GaAs HBT Avalanche Breakdown

Requires: Blaze
{newline}
Minimum Versions: Atlas 5.26.1.R

This example demonstrates avalanche breakdown in an AlGaAs/GaAs HBT with an
{bold} abrupt heterojunction.
It shows:

{bullet} Device formation using Atlas syntax
{newline}
{bullet} Specification of an abrupt AlGaAs/GaAs heterojunction
{newline}
{bullet} Selection of models for AlGaAs and GaAs
{newline}
{bullet} Ramping of the collector with an applied resistor until the breakdown voltage 

The structure specification part of this example is similar to the
previous example. The major difference is that this HBT as an abrupt
AlGaAs/GaAs heterojunction as opposed to the graded composition
fraction used before. Specifying an abrupt junction is simple. No
grad.* parameters are used and the value of
{bold} x.comp
on the 
{bold} region
statement is taken as the composition fraction throughout the AlGaAs
region right up to the GaAs region.


The models and material parameters are set exactly as in the previous
example. The only addition is the impact ionization model specified by
{bold} impact selb.
Impact ionization parameters for ternary compounds such as AlGaAs are
not well defined and their dependence on composition fraction is known
even less. Tuning of the parameters of the impact statement might be
needed to match experimental results.

The 
{bold} contact
statement is used to specify a high value resistor at the collector electrode. This
provides for a smooth transition from voltage boundary conditions to current boundary
conditions during the ramping of external collector voltage. Note that such kind
of simulation could be performed using the curve tracing algorithm, providing automatic
selection of the loaded resistor.

The emitter voltage is ramped to -1.1V. Then, holding the
emitter voltage constant, the external collector voltage is ramped to 1.e9 V.
Due to the high value resistor, the value seen on the
semiconductor-to-collector contact will, of course, not increase to
such high levels.

The results of simulation are then displayed using TonyPlot. The x-axis
of the Ic/Vcb curve should be set to
{bold} collector int. bias. 
This is the collector voltage on the semiconductor contact as opposed
to the applied voltage across the resistor.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.



{subsection} hbtex04.in : Energy Balance and Non-Isothermal Energy Balance

Requires: Blaze/Giga
{newline}
Minimum Versions: Atlas 5.26.1.R

This example compares the results of Ic/Vce simulation of an
AlGaAs/GaAs HBT using the Energy Balance (EB) and Nonisothermal Energy
Balance (NEB) Models.
It shows:

{bullet} Graded heterojunction AlGaAs/GaAs HBT formation using Atlas syntax
{newline}
{bullet} Specification of energy balance models
{newline}
{bullet} Solution for Ic/Vce characteristics
{newline}
{bullet} Comparative simulation including lattice heat flow 


Deep GaAs submicron devices should be simulated using the energy balance
Model due to strong velocity overshoot, which may substantially
influence device characteristics. For high current levels, the thermal
self-heating effects may also play an important role due to the
relatively small heat conductivity in GaAs, thereby decreasing mobility and
leading to a negative output conductance. This example demonstrates a
comparison of Ic-Vce curves obtained with Energy Balance and
Nonisothermal Energy Balance Models.


Two Atlas runs are included in this example. The initial stages of each
uses Atlas syntax to specify a graded heterojunction HBT. The syntax
used is similar to the AlGaAs/GaAs HBT examples described before. The
first run proceeds to select and solve self-consistently the classical
equations: Poisson's equation and the two carrier continuity equations,
and the energy balance equation for electrons. The second run adds the
lattice heat flow equation to these four and solves self-consistently
using a coupled solver.

The energy balance model is selected by
{bold} models hcte.el
. The most important parameter in energy balance simulation are the
relaxation times. These are set on the
{bold} material
statement.


In each run the base bias is ramped to 1.2V. Then 
{bold} contact num=2 current
is used to set current boundary conditions
on the base electrode.  The base current is forced to a value of
15uA/um. After this the collector voltage is ramped to 2.0V to obtain
the Ic/Vce curve.


The same set of models is used, except that the solution of the  lattice energy
balance equation is activated using the syntax
{bold} models lat.temp
. For the AlGaAs region the temperature dependence of the low field
mobilities is set by the
{bold} tmup
and
{bold} tmun
parameters on the
{bold} material
statement.

As with all non-isothermal simulation, thermal boundary conditions must
be included.  These are defined in the 
{bold} thermcontact 
statement.
A value of the thermal resistance is specified at the thermal contact
located along the substrate, and thermal isolation conditions are
assumed on the all other surfaces.

The results of the two runs can be overlaid in TonyPlot. The
simulation with lattice heating shows less current for a given voltage
than the isothermal case. The elevated temperature causes mobility
reduction in the semiconductor and hence lower currents.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} hbtex05.in : SiGe HBT Fabrication and Characterization Simulation

Requires: SSuprem 4/Blaze
{newline}
Minimum Versions: Atlas 5.26.1.R

This example demonstrates fabrication and analysis of SiGe HBT. A
bipolar device with a SiGe base created in Athena, and then passed to
Atlas for electrical analysis to extract a gummel plot and bipolar
gain. It shows:

{bullet} SiGe simulation in Athena
{newline}
{bullet} Specification of donor and acceptor dopants for SiGe material
{newline}
{bullet} Athena-Atlas automatic interface 
{newline}
{bullet} DC simulation for Ic and Ib versus Vbe 
 

This example contains two parts. The first is the Athena process simulation
of the HBT, and the second is the Atlas electrical analysis. The whole of the
Atlas part of this example is as described in the first example in this
section with the exception of the Atlas structure specification syntax.  

The Athena run starts by defining the mesh and the silicon substrate.
After the buried collector formation, the structure is flipped upside
down using
{newline}
{bold} struct outf=<file>
{newline}
{bold} init inf=<file> flip.y
{newline}
The next step is the deposition of the silicon germanium layer. SiGe
is a recognized material in FLASH so no special syntax is needed. The
remainder of the bipolar processing is use of typical process simulation
commands for base and emitter implant, silicon emitter layer and
various drive steps. Metal contacts are deposited, patterned and
defined using the
{bold} electrode
statement.

The key statement required for the Athena/Atlas interface is to define
the type of dopants that boron and phosphorus are in SiGe. This is
necessary for all materials in FLASH. The command
{bold} impurity i.boron acceptor sige
sets boron as an acceptor-type dopant in SiGe. A similar statement sets
phosphorus as a donor-type dopant.

The line 
{bold} go atlas
defines the automatic interface with Atlas. In Atlas, no structure
specification syntax (including the mesh statement) is needed.


Results of the electrical simulation can be seen in TonyPlot. Ic and Ib
plots vs. Vbe can be seen from the log file. The band diagram and
other physical variables can be seen from the solution file.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.



{subsection} hbtex06.in : InGaAs/InP HBT DC and High Frequency Characteristics 

Requires: DevEdit/Blaze
{newline}
Minimum Versions: Atlas 5.26.1.R

In this example, an HBT structure based on the InGaAs-InP material system is 
constructed using DEVEDIT. The structure is then passed to Atlas for
electrical testing. The input file consists of the following 2 main
portions:

{bullet} Construction of the device in DEVEDIT
{newline}
{bullet} Simulation of the Gummel plot  in Atlas
{newline}
{bullet} Simulation of the AC parameters 
{newline}
{bullet} S-parameter extraction


The first stage of the input constructs the HBT geometry, material regions,
doping profiles, and electrodes in DEVEDIT. The n-p-n HBT device is based on
a lattice matched InGaAs-InP material system. It consists of 
a highly doped InGaAs cap region followed by another cap region made of InP.
The next region, also made of InP, constitutes the actual emitter. As usual in 
HBTs the emitter (InP) has wider energy band gap than the base and collector
(InGaAs). The base is followed by the n- subcollector and n+ collector regions. 
The substrate is made of undoped InP.

The structure was created in DEVEDIT by drawing the device regions in
interactive mode and specifying 2D doping distribution. In this example
each region was uniformly doped. The Ga composition fraction of 0.47 was
also specified in DEVEDIT for each of the InGaAs regions. Finally the mesh was 
generated automatically by specifying basic mesh constraints and refining it
along x- and/or y-directions in the important areas of the device.


The Atlas simulation begins by reading in the structure from DEVEDIT.
DeckBuild provides an automatic interface between DEVEDIT and Atlas so that the
structure produced by DEVEDIT is transferred to Atlas without having to
indicate the mesh statement.

The first active statements in the Atlas portion of the input file are
material parameters and models definition. In this example the energy band gap, 
densities of states, and other fundamental material parameters for
InGaAs are calculated based on the composition specified in DEVEDIT.
For InP the respective default values are used.  
The band alignment is defined using the 
{bold} align 
parameter on the 
{bold} material
statement.  Material and model parameters can be specified in Atlas on
material-by-material or region-by-region basis. The latter possibility
is used here to define carrier lifetimes, low field mobilities, and
saturation velocities taking into consideration the doping levels in the
respective regions.

The same set of physical models is applied here to all the regions/materials:
Shockley-Read- Hall recombination, electric field dependent mobilities
with GaAs-like velocity-field characteristic, and Fermi-Dirac statistics.
To reflect the different properties of materials with regard to the critical
field, 
{bold} ecritn 
is specified in
separate 
{bold} model 
statements for InP and InGaAs.

The simulation is first performed to obtain the Gummel plot by biasing
simultaneously the base and collector with respect to the emitter up to 1.2 V.
At the same time, a small signal AC perturbation is applied at a frequency
of 1 MHz to calculate the AC parameters (conductances and capacitances) as
functions of Vbe. This also allows the user to obtain
the cutoff frequency using the low frequency approximation in TonyPlot
or using the extraction feature of DeckBuild. Currents, voltages, and AC
parameters are saved in a log file, and internal structure information
is saved for a bias condition (Vbe=Vce=0.95 V) where the cutoff frequency is
close to its maximum.  The calculation of s-parameters is specified on the
log statement with the s.param command.

At the end of the simulation,
{bold} extract
statements are used to determine the maximum 
cutoff frequency, the base bias, the input (base) capacitance, and the
transconductance - all at the bias of Vbe=Vce=1.0 V where the maximum cutoff
frequency was observed.

The structure plot, the Gummel plot, the AC current gain versus frequency, and S-parameters are then displayed using TonyPlot.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} hbtex07.in : 3D SiGe HBT Example


Requires: Device 3D
{newline}
Minimum Versions: Atlas 5.26.1.R


This example demonstrates the use of Atlas 3D to create a hetero-junction
bipolar transistor.  The structure can be plotted using
{bold} TonyPlot3D.
  The combination of a hetero-junction device with a 3D structure requires the 
use of
{bold} Blaze 3D.
The band alignment is arranged such that all the SiGe band edge discontinuity
occurs at the valance band edge.  To correctly model abrupt band edge
discontinuities, a 10 Angstrom grid spacing is recommended at these junctions.
A careful study of the grid in 
{bold} TonyPlot3D
and in the input file will show how this stringent requirement can be met
without increasing the total number of grid points to an unacceptable level
in a 3D device.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} hbtex08.in :InP/InGaAs/InP Double HBT with varying doping profile 

Requires: Blaze
{newline}
Minimum Versions: Atlas 5.26.1.R

In this example a DHBT structure based on the InP / InGaAs  material
system is constructed using Atlas.  The DHBT is then electrically tested,
and  properties  that  characterise  the  device's DC and high  frequency
performance  are calculated and presented.  The DC performance  is shown 
through a gummel plot, and the DC current gain is calculated using the 
functions property in TonyPlot. The AC performance is evaluated via 
the cutoff frequency  ft, as well as the  maximum  oscillation  frequency  
fmax. The cutoff  frequency  is  defined  as the
frequency  at  which  the  magnitude  of AC  current  gain ( i.e.  h21),
decreases  to unity.  It is  important  to note that the  transistor  is
connected in  common-emitter  configuration  for this  calculation.  The
maximum  oscillation  frequency  fmax  is the  frequency  at  which  the
unilateral power gain of the transistor  tends to unity.  The unilateral
power gain  effectively  represents the maximum power gain achievable by
the transistor. These properties can be improved though appropriate use
of  heterostructures,  stoichiometry  and  doping  to  lower  collective
resistance,  epitaxial  strain as well as several other properties, all
of which are incorporated within HBTs and indeed DHBTs offering superior performance to BJTs. 

The superior performance encountered with HBTs and DHBTs is mainly due to 
the presence of a quantum well in the emitter / base junction arising through 
the use of two    materials   of    different    band   gap.   In   this    
example InP / In(0.53)Ga(0.47)As  have been used.  The  quantum  well  
stops  back  injection  of holes  from the base into the  emitter  which
will reduce the base  current and  consequently  increase the
current  gain.  The quantum  well will also permit the base doping to be
increased  which will lower the resistance  encountered  within the base
and reduce the transit time for electrons thus increasing
frequency  performance.  By adding a second  heterostructure  within the
collector   /   base   region   (i.e.  In(0.53)Ga(0.47)As / InP)   epitaxial
relationships are improved throughout the structural growth with an
overall improvement in device performance. 

Another technique to improve a device's performance is to use a graded doping 
profile.  This will aid in  controlling  electric  fields  concomitant  with  
depletion regions and will improve breakdown characteristics. This example  
demonstrates  this ability by  importing  doping  profiles  previously  specified  in an ASCII text
editor.  These files are called upon during the  construction  stage and
the doping profiles will be replicated accordingly.  In this example the
files used are  
{bold}  hbtex08_n.dat 
and 
{bold}  hbtex08_p.dat 
for n and p type doping respectively.  The user can simply  create an ASCII text file  having two
columns.  The left column  specifies  the depth  location  and the right
column specifies the concentration at that location.

An example would be:

{bold} 0.0 1e16
{newline}
{bold} 1.0 1e20
{newline}
{bold} 1.001 0.0
{newline}
{bold} 2.0 0.0
{newline}
{bold}   ( Must put a carriage return here )
{newline}

As this is an ASCII file, a carriage  return  must be placed at the end of the
file. To use this file would require the commands:

doping (specify type) ascii infile=(filename)

It is also noted that interpolation is used between specified locations. 
Consequently the doping profile must be set to zero through certain 
locations if so desired. Otherwise an interpolated value will be used 
until the end of the device is encountered. This is demonstated in the 
above example.

The accuracy of the simulations is also improved by the use of Atlas-Interpreter 
mobility models for the materials.  The models are based on "Empirical low-field mobility 
model for III-V compounds applicable in device simulation codes", M. Sotoodeh, A. H. Khalid,
and A. A. Rezazadeh, J. Appl. Phys., 87, 2890 (2000).

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




