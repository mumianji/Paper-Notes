{section} VICTORYPROCESS : 1D/2D/3D Process Simulation Examples


{subsection} vpex01.in : 1D/2D Victory Process tutorial 
{newline}
Requires: Victory Process : Core Simulator, 2D Diffusion & Implantation, 2D Oxidation
{newline}
Minimum Version: Victory Process 7.22.0.R

This example demonstrates 2D process simulation for 28nm NMOS transistor
with STI (Shallow Trench Isolation). The simulation deck  
consists of about 20 actual process steps - etching, deposition, ion implantation,
diffusion/oxidation, and more then 50 auxiliary statements, including initialization,
mesh generation, exporting structure for visualization,and  parameter extraction.

The goal of this example is to provide a basic tutorial for Victory Process in 2D mode.
It also demonstrates generic compatibility with Athena syntax  as well as some 
advantages (including better internal meshing and convergence) over Athena.

Most of time consuming numerical algorithms of Victory Process are efficiently parallelized.
By default Victory Process runs on just one processor.
To ensure the best performance on your computer the following simulation condition
{bold} simflags="-P all"
is specified in the 
{bold} go
line starting Victory Process. This means that all processors available will be used in
parallel section of Victory Process.
 If you want to use a smaller number of processors you can substitute "all" with a desired number, e.g.
{bold} simflags="-P 4".

Simulation starts with
{bold} Init
statement, which specifies 
{newline}
{bullet} wafer properties: material, orientation, initial doping,
{newline}
{bullet} simulation domain: lateral (x-direction) interval [0,0.45], substrate depth, and
height of gas region above substrate. This domain corresponds to right half of the NMOS device with STI.
The complete structure suitable for device simulation will be obtain by "mirroring" command in the end of simulation.
{newline}
{bold} Note:
 always make sure that the total thickness of all layers deposited above substrate will not be larger than GASHEIGHT.
{newline}
{bullet} the size of mesh cells (0.01 micron) of the base grid which is used for geometry representation.In fact Victory Process uses Nested Cartesian Grid approach to represent geometry and material boundary movements. By default 
{bold} meshdepth = 2
,which means that only one nested mesh level will be used during this process. As the result the minimum resolution of the layer boundaries representation will be 0.0025 microns. 
The resolution can be further increased by either decreasing of base grid cell size or specifying 
{bold} meshdepth > 2.

Victory Process uses non-uniform Cartesian grid to resolve volumetric data, e.g. doping or defect concentration, stress, etc. In 2D mode this grid is defined by a set of 
{bold} line x
 and
{bold} line z 
statements. This grid is similar to initial grid generated by Athena. The differences are: the "depth" coordinate is "z" (not "y"), the lines apply to the whole simulation domain including 
gas region, and triangle elements are not generated in Victory Process.

This example uses automatic selection of simulation dimensionality. This means that simulation will start in 1D and will switch to 2D when required by the process flow. This is a default mode and,
 as in Athena, this capability saves simulation time without loosing any accuracy. If you want to force Victory Process to run in 2D from the very beginning you can specify 
{bold} flow.dim=2d
.

The first process sequence is N-well formation consisted from boron implant and diffusion cycle with temperature ramp-up, constant, and ramp-down steps. Default analytical implant model
 and default diffusion model are used in this sequence. In the end of this process sequence the structure is still 1D. It is saved for visualization using 
{bold} export
command. The well profile is visualized using TonyPlot.

The next process sequence is STI formation. A half of 0.3 microns shallow trench with 85 degrees side wall is formed by geometrical etch and then oxidized in dry ambient. 
The active area is masked with nitride layer. Note that Victory Process allows to specify the deposition interval, using parameters 
{bold} left.to, right.to, between
. Full physical oxidation model should be used for this non-planar structure. The oxidation simulation is slightly slower then Athena for similar structures. In the same time Victory
 Process is usually more stable than Athena which often produces oxidation artifacts due to irregular grid around slopped trench walls.
 The trench then filled with oxide which is automatically planarized. This is achieved by using parameters
{bold} max
and
{bold} thick=0.0
in the deposit statement which means that the trench will be filled up to horizontal plane at the highest point of the structure. 
This capability is more convenient and stable than deposition step followed by "etch above" step in Athena.  

The next step is Vt implant which uses( as all subsequent implants ) Monte Carlo model. 
The Monte Carlo implant model is very efficiently parallelized. If you want to increase simulation speed and number of processors set in the 
{bold} go 
statement is not set to "all" you can set higher number
of processors used by Monte Carlo implant using parameter
{bold} parallel
. 
{newline}
The number of simulated ion trajectories ( parameter 
{bold} n.ion 
) is very important because it determines a trade-off between accuracy and simulation time. For 2D simulation  this number should be preferably in interval between 200000 and 1000000.
 You always can start with lower number of trajectories during first stages of simulation flow design and increase it for final runs.

Following removal of sacrificial oxide, thin (~7nm) gate oxide layer is grown using full physical oxidation model.
{bold} Extract
capability of Deckbuild is used to measure gate oxide thickness. 

After that, the poly-silicon gate is formed using geometrical deposition and then re-oxidized in a dry ambient.

The HALO implant with 25 degrees tilt is performed using Monte Carlo model. Note that Victory Process allows to specify several rotation angles in one implant statement. In this case 
{bold} rotation=0
and
{bold} rotation=180
are used to assure implant symmetry.
 The low energy Arsenic implant is used to dope extension before spacer is formed using geometrical deposition and etching of nitride. The shape of the spacer is shown by TonyPlot.

The final process sequence of this example is S/D formation. The 
{bold} plus.one
model is specified in the high dose arsenic implant statement. The model estimates interstitial profile generated after implant by scaling the impurity profile with factor
{bold} dam.fac.
 The advanced 
{bold} single-pair
diffusion model is used for final S/D anneal. This model should be used when there are substantial amount of point defects generated during preceding process step. In this specific case high dose 
S/D implant is the source of interstitial which tend to pair with impurities and therefore affect final distribution.
 The single_pair model takes into account only dominant or primary impurity-defect pairs, e.g. Boron-Interstitial pairs. The scaling factor
{bold} dam.fac
usually serve as calibration parameter.

In the end of simulation, two parameters of the simulated device - S/D junction depth and estimated (1D) threshold voltage - are extracted.
 Finally, the contact metal is added using geometrical etch and deposition and the full structure ready for device simulation is obtained using 
(bold} mirror
capability in the 
{export}
statement.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.


Several intermediate structures will be created. The following plots demonstrate different steps of the process flow:


{pngview}  vpex01_well.png
 shows the 1D well profile.

{pngview}  vpex01_cmp.png
 shows the 2D structure after trench etch, oxidation and planarization.

{pngview}  vpex01_spacer.png
 shows the shape of spacer area obtained using geometrical deposition and etch commands

{pngview} vpex01_final.png
 shows the final full structure with absolute net doping which is ready for device simulation. During the export the structure is also mirrored to obtain a full MOS device with source and drain side.

{subsection} vpex02.in : 3D Victory Process tutorial (process mode)

Requires: Victory Process : Core Simulator, 3D Physical Etch & Deposit, 3D Diffusion & Implantation, 3D Oxidation
{newline}
Minimum Version: Victory Process 7.22.0.R

This example demonstrates 3D process simulation by using all fundamental 
process simulation capabilities of Victory Process. You may consider this
example as a tutorial for performing a 3D simulation in process mode
of Victory Process. 


List of key syntax:

{bold} Init: 
Defines simulation volume, meshing resolution and number of 
Adaptive Mesh Refinement 
{bold} (AMR) 
levels


{bold} Line: 
Adjusts volume data mesh


{bold} Etch: 
Etching with geometrical mode


{bold} Deposit: 
Deposition with geometrical mode 


{bold} Etch: 
Etching with physical mode


{bold} Deposit: 
Deposition with physical mode 


{bold} Implant: 
Ion implantation


{bold} Diffuse: 
Performs oxidation, dopant activation and dopant diffusion


{bold} Lithography: 
Performs aerial image simulation and creates aerial image based 
mask layers

{bold} Export: 
Exports the simulation result for visualization or to be used by 
other tools. As in this case, structures created by 
Export Victory(Conformal) are supposed to be used within 
Victory Device.  


To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.

{subsection} vpex03.in : 3D Victory Process tutorial (structure editor mode)

Requires: Victory Process : Core Simulator, 3D Structure Editor, 3D Diffusion and Implantation
{newline}
Minimum Versions: Victory Process 7.22.0.R

The goal of this example is to provide a tutorial on Victory Process cell mode
based on a 3D buffered super junction LDMOS device. The device simulation itself
and corresponding description can be found in powerex18 example. A Detailed description 
of the process syntax is mentioned in the text below as well as in the input deck itself. 

{bold} Super junctions
are used in LDMOS structures to
{bold} greatly increase the breakdown voltage
of small geometry devices
by allowing the drain depletion region to spread in two dimensions
instead of one at higher drain voltages
(the additional direction being laterally across the super junction).
The neat result is that the drain voltage can now be spread across
a much greater total distance than would otherwise be the case,
which greatly lowers the field at the drain
and therefore increases the breakdown voltage.


By default Victory Process runs on just one processor.
To ensure better performance on your computer the following simulation condition
{bold} simflags="-P all"
could be specified in the 
{bold} go
line starting Victory Process. This means that all processors available will be used.
If you want to use a smaller number of processors you can substitute "all" with a desired number, e.g.
{bold} simflags="-P 4".


Victory Process in cell mode starts with a definition of the initial wafer material, including its thickness
{bold} depth=10
and background doping
{bold} dopant=boron dopingvalue=1e15
, as well as the simulation domain. The horizontal extent of the simulation domain is automatically determined from the enclosing bounding box of the mask layers contained in the mask file
{bold} vpex03.lay
. This mask file is imported into Victory Process with the 
{bold} layout
parameter. The  
{bold} depth=10
and
{bold} gasheight=5
parameters set the vertical extent of the simulation domain as follows: the vertical position of the wafer surface is at "0" level on the Z-axis with the wafer of
{bold} 10 um
in thickness along the positive Z-direction. Above the wafer surface in the negative Z-direction lies a 'transparent' gas region with a thickness of
{bold} 5 um
.

After the wafer initialization, we manually define the volume data mesh by several 
{bold} line
statements. These mesh lines are especially intended for subsequent implantation and diffusion steps. Then, we implant boron 
and phosphorus ions into regions that are supposed to be p-base and n-buffer regions with the aid of "PBASE" and "NBUFF" mask 
layers and after that perform a diffusion process. The next step consists of defining a poly gate with "POLY" mask and forming 
n-pillar, p-pillar, n+ source/drain and p+ regions with "NILLAR", "PILLAR", "NSD", and "PPLUS" layers, respectively, by ion 
implantation and thermal diffusion. 

Finally, we make contact holes in the oxide layer and fill them with aluminum to form the source, drain, and substrate electrodes. The statement
{bold} electrodes "cont" aluminum
turns all exposed aluminum regions that are overlapped with "cont" layer into electrodes and assigns corresponding labels from "cont" layer as electrode names to those electrodes. Similarly, with the statement
{bold} electrodes "cont" polysilicon
all exposed polysilicon regions that are overlapped with "cont" layer become electrodes taking corresponding labels from "cont" layer as their names.

Victory Process in cell mode provides several options to export calculated process structure to a format suitable for device simulation. These include, e.g.,:

{bold} export 2d y=2:
Export a 2D cross-section of the geometry and the volume data across a plane parallel to one of the coordinate planes (Y=2).

{bold} export atlas3d(regular):
Export a prismatic mesh that contains all nodes of the volume data mesh and an approximated representation of the geometry of the process mesh.

{bold} export victory(delaunay):
Export an unstructured tetrahedral mesh with local mesh density controllable by users.

In addition, Victory Process in cell mode supports mirroring feature for all options of prismatic mesh export, e.g.,
{bold} export atlas3d(conformal) mirror="-x+y" 
,
{bold} export atlas3d(regular) mirror="x-y"
,
{bold} export atlas3d(reduced) mirror="-x-y" 
and enables cropping the structure with mask layers, e.g., "CRP" layer, within an unstructured tetrahedral mesh export
{bold} export victory(delaunay) crop.mask="CRP" 

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.


{subsection} vpex04.in : Physical deposition models example

Requires: Victory Process : Core Simulator, 3D Physical Etch & Deposit
{newline}
Minimum Versions: Victory Process 7.22.0.R

This example demonstrates three different default deposition models as well as 
geometrical deposition. This example also illustrates the 
definition of mask polygons in 
{bold} Victory Process.

The example shows a deposition steps performed with three different models 
on the same initial structure. Conformal, non-conformal and primary deposition model are used. 
The last illustrates a deposition model that uses the primary flux ballistic transport mode. 


List of key syntax:

{bold} Init: 
Defines simulation volume and meshing resolution and number of 
Adaptive Mesh Refinement 
{bold} (AMR) 
levels


{bold} SpecifyMaskPoly: 
Defines mask layer polygon


{bold} Deposit: 
Simple analytical deposition 


{bold} Deposit: 
Physical deposition process. Parameters include
{bold} model, 
to select the deposition model, 
{bold} material, 
to define the deposited material,
{bold} deposition rate, 
to define the deposition rate in um/sec, um/min or um/hour with um/min being the default, 
{bold} time 
to define the deposition time in sec, min, hour with min being the default and 
{bold} ratio 
to define the extend of directionality of the deposition.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.

{subsection} vpex05.in : Ion Milling Patterning of Nanostructure

Requires: Victory Process : Core Simulator, 3D Physical Etch & Deposit
{newline}
Minimum Versions: Victory Process 7.22.0.R

This example demonstrates simulation of ion milling pattering of magnetic nanostructures. The key capabilities of Ion Milling simulation are involved in this example:

{bullet} Ion beam rotation and beam divergence
{newline} 
{bullet} Redeposition of sputtered material
{newline}
{bullet} Semi-empirical Yamamura model for etch rates 
{newline}

Ion milling is an effective method for top-down nanoscale pattering of magnetic materials 
{bold} [1]
. The successful use of ion milling requires considerable  etch rate  selectivity between mask and magnetic material. Ion Milling etch rate is proportional to sputtering yield, i.e. number of sputtered 
(removed) material atoms per incident ion. The sputtering yield depends on many factors: the milling ion and its energy, 
as well as on composition, density and other material characteristics  of the material. 
In this test example Chromium is used as a magnetic material and Carbon with diamond characteristics for mask material.  

The typical rate ratio between magnetic materials and hard mask should be around 3 to 5 to achieve required selectivity. 
It is known that higher selectivity could be achieved at lower energies of order of few hundreds eV. Such low energies are also preferable 
to avoid excessive damage inside material during ion bombardment. 

Predictive simulation of Ion Milling of nanostructures requires accurate data on of angular dependence of etch rate. The angles between material surface segments and incoming ions are constantly changing during the milling process because of the surface movement and changing visibility within mask opening.
This angular dependency is impossible to predict from first principles. It was usually found in maskless experiments, so obtained measured dependency in a 
table form can be used through Victory Process open library interface. 

This approach is very reliable, but unfortunately it requires  new experiment for each ion, ion energy and material. This would make process optimization a very time consuming task. 

Victory Process provides an alternative approach in form of semi-empirical Yamamura model for ion milling etch rates. 
The model requires just one parameter to be calibrated using an experimental data for a typical ion energy and after 
that can be used for different energies in the energy range and different ion currents.The Yamamura model is used in this example.

Another critical issue for ion milling of nanostructures is limitations due to effect that some sputtered atoms do not escape back to the
 process chamber through mask openings but collide with sidewalls and deposit there. This effect in case of magnetic nanostructure pattering was observed and discussed in
{bold} [2]
.  
This redeposition effect is taken into account in this example.  

Following is the brief description of key steps and parameters of the ion milling simulation. Note that some of simulation and geometrical parameters are specified in the 
{bold} set 
statements, so they can be used for process optimization or DOE. 
  

{bullet} Base resolution set to 2 nm. Since by default mesh refinement depth set to 2 the minimum resolution will be 0.5 nm.
{newline} 

{bullet} The simulation domain in XY-plane  will be a slice of 30 nm by 4 nm.
{newline} 

{bullet} Both substrate thickness and mask thickness set to 20 nm
{newline}

{bullet} The mask opening
{bold}  CD 
set to 10 nm
{newline}

{bullet} The 
{bold} Init 
statement defines simulation volume and substrate material Chromium
{newline}

{bullet} The HARD mask is set using the
{bold} specifymaskpoly 
statements. 
{newline}

{bullet} The hard carbon (diamond) mask layer is deposited and then mask opening is etched.
{newline}

{bullet} The initial structure before Ion Milling is saved in the file vpex05_0.str
{newline}

{bullet} Redeposition efficiency set to 0.8, which means that 80% of sputtered particle will "stick" to the walls to form the redeposited layer.
{newline}

{bullet} The redeposition material is usually a complex mix of particles sputtered in all materials in the structure. In this specific case this material will obviously consists of Chromium atoms, 
but its characteristics could differ from bulk Chromium. It is logical to estimate that its density will be lower then that of Chromium. 
{newline}

{bullet} The
{bold} material 
statement specifies that the "alloy" has the same ion milling characteristics as chromium with only lower mass density.
{newline}

Now everything is ready for Ion Milling simulation. 

The
{bold} IonMill 
statement specify all conditions and parameters of the simulation:

{bullet} Parameter 
{bold} beamangle 
specifies that the angle between ion beam and surface normal will be 5 degrees
{newline}

{bullet} Parameter 
{bold} beamdivergence 
specifies that directions of the ions will be distributed around beamangle according to Gaussian-like formula with the peak at "beamangle" degrees from normal.
{newline}

{bullet} The duration of the ion milling process will be 5 minutes.
{newline}

{bullet} Next two parameters specifies the solver and automatic mesh refinement
{newline}

{bullet} parameter 
{bold} rotation=on 
means that ion beam will be continuously rotated around the wafer normal
{newline}

{bullet} Parameter
{bold} maxCFL  
controls simulation time steps. The values below 1 guarantees higher accuracy and "smoother" solution for redeposition layer.
{newline}

{bullet} Next 3 parameters specify physical characteristics of the ion beam. The 250 eV Argon ions with current density of 1.5 pA/(um^2) are used in this ion milling process.
{Bold} Note: 
if at least one of these 3 parameters is not specified the experimental etch rate table must be provided.
{newline}

The last 5 parameters of the 
{bold} IonMill 
statement specify and control simulation of redeposition effect:

{bullet} Parameter 
{bold} redepmaterial 
specifies that "new" material alloy will be formed. Its ion milling parameters according to 
{bold} material 
statement above will be the same as those of Chromium with lower density.
{newline}

{bullet} Parameter 
{bold} secefficiency 
specifies portion of sputtered particles which will participate in forming of the redeposited layer.
{newline}

{bullet} Parameter 
{bold} secLimit  
specifies accuracy of redeposition process. The higher accuracy of redeposition simulation is provided by taking into
account of sputtered particles generated outside the simulation domain. This is achieved by virtual reflections of 
the simulation domain. The lower the secLimit parameter the higher accuracy can be achieved. 
{newline}

{bullet} Parameters 
{bold} reflectX  
and
{bold} reflectY 
define maximum number of reflections in X and Y direction correspondingly. In this specific case only particle 
generated within the forming trench in Y direction could reach the side walls within simulation domain. If 
these parameters were not specified the reflections would continue until the required accuracy is achieved. 
{newline}

The 
{bold} export 
statement saves the structure for visualization using 
{bold} TonyPlot 3D 
and parameter extraction.
{newline}

The next section of example demonstrates how to generate a 2D structure and use it for extraction of geometrical parameters after ion milling. The experimental of 
{bold} [2] 
show that the redeposition effect limits the etching depth and results in non-vertical sidewalls with slopes of around 60 - 70 degrees. The extracted parameters 
{bold} "d" 
in microns and
{bold} angle 
in degrees could be used for calibration of this simulation process and/or optimization of process conditions. 
{newline}

Several input parameters  including mask opening width
{bold} CD
, mask thickness 
{bold} mask_thick 
as well as ion energy
{bold} energy
, ion current density 
{bold} currentdensity
, ion beam angle
{bold} beamAngle 
could be used for process optimization. Also, parameters 
{bold} seceff 
and 
{bold} alloy_density_coeff 
could be used for simulation calibration.

Finally, three files named "ratetable_<materialname>_<materialID>.str  containing angle dependency of ion milling rates calculated according 
to semi-empirical Yamamura model were generated during the simulation. The final plot compares those rates.

{bold} [1]
 D. Kercher, Pattering Magnetic Nanostructures with Ions, in Nanofabrication Handbook, editors S. Cabrini and S. Kawata, CRC Press, p. 421 (2012)

{bold} [2] 
D.Kercher, Geometrical Limitations of Ar Ion Beam Etching, EIPBN-2010

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.

{subsection} vpex06.in : Deep Reactive Ion Etch example

Requires: Victory Process : Core Simulator, 3D Physical Etch & Deposit
{newline}
Minimum Versions: Victory Process 7.22.0.R

This example demonstrates the syntax needed for the simulation of a reactive ion etch
and passivation process. This example also illustrates the definition of mask 
polygons in 
{bold} Victory Process

After preparing the initial structure using a polygon mask and a geometrical
deposition step, the reactive ion etch (RIE) model is activated. Finally the
reactive ion etch model is called in a sequence with a conformal passivation step.


List of key syntax:

{bold} Init: 
Defines simulation domain and geometrical mesh resolution and number of 
Adaptive Mesh Refinement 
{bold} (AMR) 
levels


{bold} SpecifyMaskPoly: 
Defines mask layer polygon


{bold} Deposit: 
Deposition with geometrical mode 


{bold} Etchdepoproperties: 
Defines material properties relevant to etch and depo steps. Parameters include:
{bold} name, 
to assign a deck name to the material properties for later reference, 
{bold} material, 
to define the material for which the following parameters are valid, 
{bold} rate, 
to define the etch rate in um/sec, um/min or um/hour with um/min being the default. 


{bold} Flux: 
Defines a c-function based flux model. In this case the 
{bold} rieetcherflux 
model which has two parameters and two dependencies.


{bold} TopographyModel: 
Once given a name, defines a deposition or etching model by combining a surface reaction 
model and a flux model.


{bold} Deposit: 
Performs a physical deposition process. Parameters include: 
{bold} model, 
to select the depo model, 
{bold} material, 
to define the deposited material, 
{bold} depositionrate, 
to define the deposition rate in um/sec, um/min or um/hour with um/min being the default and 
{bold} time 
to define the deposition time in sec, min or hour with min being the default.


{bold} Etch: 
Performs a physical etching step. Parameters include: 
{bold} model 
to select the etch model, 
{bold} materialproperties 
to select the material properties (see Etchdepoproperties statement), 
{bold} time 
to define the etching time in sec, min or hour with min being the default and 
{bold} maxCFL 
to control the maximal time step for the simulation of this process step. 

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.

{subsection} vpex07.in : Ion Enhanced Chemical Etching Example 

Requires: Victory Process : Core Simulator, 3D Physical Etch & Deposit
{newline}
Minimum Versions: Victory Process 7.22.0.R

This example demonstrates the ion enhanced chemical etching model.
The enhancement effect is demonstrated by performing two simulations
with different ion acceleration. Moreover this example illustrates 
the generation of round mask features.

List of key syntax:


{bold} Init: 
Defines simulation volume and meshing resolution


{bold} SpecifyMaskPoly: 
Defines mask layer polygon


{bold} Save: 
Saves simulation status 


{bold} Export: 
Exports simulation status in Tonyplot 3D format 


{bold} Deposit: 
Deposition with geometrical mode 


To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.


{subsection} vpex08.in : Simulation of diffusion enhancement due to interstitial supersaturation

Requires: Victory Process : Core Simulator, 2D Diffusion & Implantation
{newline}
Minimum Version: Victory Process 7.22.0.R

This example demonstrates implantation induced interstitial supersaturation and 
the application of advanced diffusion models for the simulation of transient 
dopant diffusion enhancement. 

Moreover the junction extraction capability of Victory Process is 
demonstrated extensively as well as the capability to export 1D 
cross-sections.


List of key syntax:

{bold} Init: 
Defines simulation volume, meshing resolution and number of
Adaptive Mesh Refinement
{bold} (AMR) 
levels


{bold} Line:  
Adjusts volume data mesh (for diffusion simulation)


{bold} Deposit: 
Deposition with geometrical mode


{bold} Implant: 
Ion implantation


{bold} Diffuse: 
Performs dopant activation and dopant diffusion


{bold} Extract XJ: 
Extracts the position of the junction along a 1D cut-line


{bold} Export 1D: 
Exports a 1D cut-line for visualization in tonyplot


To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.


The following plots demonstrate:


{pngview}  vpex08_01.png
 shows the implanted boron profile and the implantation induced interstitial profile.


{pngview}  vpex08_02.png
 shows the boron, interstitial and boron-interstitial pair profiles after 1ms of annealing..


{pngview} vpex08_plot0.png
 shows the position of the junction over time while the annealing progresses.

{subsection} vpex09.in : Oxidation example 

Requires: Victory Process : Core Simulator, 3D Diffusion & Implantation, 3D Oxidation
{newline}
Minimum Versions: Victory Process 7.22.0.R

This example demonstrates geometrical deposition, oxidation, 
layer thickness extraction and saving and restoring of simulation status.  
This example also illustrates the handling of external layout 
files (.lay format) in 
{bold} Victory Process.


List of key syntax:

{bold} Init: 
Defines simulation volume and meshing resolution


{bold} Deposit: 
Deposition with geometrical mode 


{bold} Oxidize: 
Oxidation emulation with analytical mode


{bold} Diffuse: 
Oxidation simulation with physical mode


{bold} Extract: 
Extracts properties from simulation result 


{bold} Save: 
Saves simulation status


{bold} Load: 
Restores simulation status

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.


{subsection} vpex10.in : Photolithography example 

Requires: Victory Process : Core Simulator
{newline}
Minimum Versions: Victory Process 7.22.0.R


This example demonstrates photolithography through a user defined mask.


List of key syntax:

{bold} Init: 
Defines simulation domain, geometrical mesh resolution and number of 
Adaptive Mesh Refinement 
{bold} (AMR) 
levels

{bold} Lithography: 
Photolithography for a predefined mask.
{bold} mask 
names the layer to which the photolithography step to be applied. 
{bold} maskAperture 
defines the numerical aperture of the optical system.
{bold} standardWl 
sets the wavelength to one of predefined values.
{bold} resultImage 
nominates the file where the areal image is stored.


{bold} Deposit: 
Deposition with geometrical mode

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.
