{section} THERMAL : Thermal Distribution Application Examples



{subsection} thermalex01.in : Simple Two Transistor Simulation

Requires: DevEdit 3D/Thermal 3D
{newline}
Minimum Versions: Atlas 5.26.1.R

This example runs thermal simulation of a 2 transistors. The main sequential tasks are:

{bullet} Specification of two neighboring transistor regions in DevEdit 3D
{newline}
{bullet} Specification of heat sinks in in DevEdit 3D
{newline}
{bullet} Interface to Atlas
{newline}
{bullet} Selection of thermal models and material parameters
{newline}
{bullet} Solution of temperature distribution

The structure in this example is defined using DevEdit 3D. The structure was 
initially defined using the graphical mode of DevEdit 3D. After the mesh was 
created, a command file was saved from DevEdit 3D enabling the structure to 
be re-created in DeckBuild.

The structure used here consists of two neighboring transistors
embedded in a substrate material. For thermal modeling, the transistors
are considered only as heat sources. No internal details of the
transistors are considered. An Aluminum region is defined as an 
{bold} electrode
on the bottom of the substrate material. This will act in
Atlas as a thermal rather than an electrical boundary condition.

The
{bold} go atlas 
statement automatically interfaces DevEdit 3D to Atlas. On reading the
three dimensional mesh file, Atlas will automatically enter 3D mode.

The material statement is used to define the thermal conductivities of each region using the 
{bold} tc.const 
parameter. This parameter sets a constant value for thermal
conductivity. Later examples show regions with temperature dependent
thermal conductivities. The
{bold} power 
parameter sets the thermal output of the region. This naturally defines these regions at heat sources. 

The command
{bold} models thermal 
is all that is required to enable the 3D thermal calculations. The final stage sets
{bold} solve t1=300
. This defines the temperature of the heat sink (or electrode) number 1. The final 3D thermal distribution is saved to the file specified by the 
{bold} outfile
parameter. This can be viewed in TonyPlot 3D.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} thermalex02.in : Eight Power Source Structure

Requires: DevEdit 3D/Thermal 3D
{newline}
Minimum Versions: Atlas 5.26.1.R

This example runs a thermal simulation of a 2 layer structure with 8 power 
sources. The main sequential tasks are:

{bullet} Specification of all ten regions in DevEdit 3D
{newline}
{bullet} Specification of heat sink in in DevEdit 3D
{newline}
{bullet} Interface to Atlas
{newline}
{bullet} Selection of thermal models and material parameters
{newline}
{bullet} Solving of temperature distribution

This example is similar to the device described in 
{bold} Thermal Simulation and Design of a GaAs HBT Sample and Hold Circuit 
by Ken Poulton et al. The device technology is from the paper by R.
Nubling in Technical Digest of 1990 GaAs IC Symposium pp53-56.

The structure in this example is defined using DevEdit 3D in a similar
manner to the previous example. Initially the structure was defined
using the graphical mode of DevEdit 3D. After the mesh was created, a
command file was saved from DevEdit 3D enabling the structure to be
re-created in DeckBuild.

Once in Atlas, the 
{bold} models thermal 
statement is used to indicate that this is a heat distribution simulation. 
The
{bold} material 
statement is used to set the heat power output of each of the eight
heat producing regions in this structure. Region #10 is defined to have
a constant thermal conductivity of 1.0. The
{bold} solve t1=300 
statement sets the thermal boundary condition on the electrode to be
300K and then solves the heat flow equation self-consistently in the
structure. The resulting 3D heat distribution can be shown in
TonyPlot 3D.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} thermalex03.in : Layers with Temperature Dependent Conductivity

Requires: DevEdit 3D/Thermal 3D
{newline}
Minimum Versions: Atlas 5.26.1.R

This example runs thermal simulation of a 2 layer structure with 8 power 
sources where the thermal conductivity of region #1 (the first layer)
and region #10 (the second layer) is a function of temperature.

The structure and syntax used in this example is exactly the same as that used in the previous example with the following exception. The thermal conductivity of region #1 is defined to be dependent on temperature by the statement
{bold} tcon.polynom
. This sets a polynomial dependence of thermal conductivity as described in the manual. 

In region #10, the thermal conductivity is set according to a simpler power law. The parameter
{bold} tcon.power
is used to indicate this. Parameters of the power law are set using the
{bold} tc.c0 
and
{bold} tc.npow
. Details of the equations used can be found in the models description of Thermal 3D.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} thermalex04.in : GaAs IC Structure

Requires: DevEdit 3D/Thermal 3D
{newline}
Minimum Versions: Atlas 5.26.1.R

This example runs thermal simulation of a  GaAs IC structure with three
heat producing devices.

The device consists of three GaAs regions defined as heat sources in a
GaAs substrate. A single thermal contact is applied to the bottom of
the substrate region. The structure is prepared using DevEdit 3D in a
similar manner to the previous examples in this section.

In Atlas, the 
{bold} material 
statement is used to define the power output of two of the three GaAs
regions. The substrate is defined as having a temperature dependent
thermal conductivity according to the
{bold} tcon.power 
parameter.

This example is designed to show the effect of the heating produced by
neighboring devices on a non-heat producing transistor. The third GaAs
region (defined as region #4) has no heat power output. However the
solution file will show that the device is heated by conduction from
the neighboring devices.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} thermalex05.in : Simple Simulation with Temperature Stepping

Requires: DevEdit 3D/Thermal 3D
{newline}
Minimum Versions: Atlas 5.26.1.R

This example runs thermal simulation of a 2 transistors. The main sequential tasks are:

{bullet} Specification of two neighboring transistor regions in DevEdit 3D
{newline}
{bullet} Specification of heat sinks in in DevEdit 3D
{newline}
{bullet} Interface to Atlas
{newline}
{bullet} Selection of thermal models and material parameters
{newline}
{bullet} Specification of temperature stepping parameters
{newline}
{bullet} Solution of temperature distribution

The structure in this example is defined using DevEdit 3D. Initially
the structure was defined using the graphical mode of DevEdit 3D. After
the mesh was created, a command file was saved from DevEdit 3D enabling the
structure to be re-created in DeckBuild.

The structure used here consists of two neighboring transistors
embedded in a substrate material. For thermal modeling the transistors
are considered only as heat sources. No internal details of the
transistors are considered. An Aluminum region is defined as an 
{bold} electrode
on the bottom of the substrate material. This will act in
Atlas as a thermal rather than an electrical boundary condition.

The
{bold} go atlas 
statement automatically interfaces DevEdit 3D to Atlas. On reading the
three dimensional mesh file, Atlas will automatically enter 3D mode.

The material statement is used to define the thermal conductivities of each region using the 
{bold} tc.const 
parameter. This parameter sets a constant value for thermal
conductivity. Later examples show regions with temperature dependent
thermal conductivities. The
{bold} power 
parameter sets the thermal output of the region. This naturally defines these regions at heat sources. 

The command
{bold} models thermal 
is all that is required to enable the 3D thermal calculations. The final stage sets
{bold} solve t1=300
. This defines the temperature of the heat sink (or electrode) number 1. 
In this example the temperature on electrode 1 is stepped by adding the 
{bold} TEMPSTEP NSTEPS 
and
{bold} electrode 
parameters.  
{bold} TEMPSTEP 
determines the size of the temperature step and the
{bold} NSTEPS 
gives the number of temperature steps to be performed.  The 
{bold} electrode 
parameter identifies which electrode to step as more than one electrode temperature can be defined on the 
{bold} solve 
statement.  The 3D thermal distributions are saved to the file specified by the 
{bold} outfile 
parameter. The output file name rightmost characters will be incremented alphanumerically so a different file will be saved for each step.  
These can be viewed in TonyPlot 3D.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.



{subsection} thermalex06.in : Simple Simulation with Power Stepping

Requires: DevEdit 3D/Thermal 3D
{newline}
Minimum Versions: Atlas 5.26.1.R

This example runs thermal simulation of a 2 transistors. The main sequential tasks are:

{bullet} Specification of two neighboring transistor regions in DevEdit 3D
{newline}
{bullet} Specification of heat sinks in in DevEdit 3D
{newline}
{bullet} Interface to Atlas
{newline}
{bullet} Selection of thermal models and material parameters
{newline}
{bullet} Specification of the power stepping parameters
{newline}
{bullet} Solution of temperature distribution at different thermal powers

The structure in this example is defined using DevEdit 3D. Initially
the structure was defined using the graphical mode of DevEdit 3D. After
the mesh was created, a command file was saved from DevEdit 3D enabling the
structure to be re-created in DeckBuild.

The structure used here consists of two neighboring transistors
embedded in a substrate material. For thermal modeling the transistors
are considered only as heat sources. No internal details of the
transistors are considered. An Aluminum region is defined as an 
{bold} electrode 
on the bottom of the substrate material. This will act in
Atlas as a thermal rather than an electrical boundary condition.

The
{bold} go atlas 
statement automatically interfaces DevEdit 3D to Atlas. On reading the
three dimensional mesh file, Atlas will automatically enter 3D mode.

The material statement is used to define the thermal conductivities of each region using the 
{bold} tc.const 
parameter. This parameter sets a constant value for thermal
conductivity. Later examples show regions with temperature dependent
thermal conductivities. The
{bold} power 
parameter sets the thermal output of the region. This naturally defines these regions at heat sources.  The region thermal power can also be defined in the 
{bold} solve 
statement for power stepping as shown below.

The command
{bold} models thermal 
is all that is required to enable the 3D thermal calculations. The final stage sets
{bold} solve t1=300
. This defines the temperature of the heat sink (or electrode) number 1. 
The region thermal power can be specified by adding the 
{bold} POWERx
parameter where 
{bold} x
is the region number.  This has the same effect as in the 
{bold} material
statement and will override the value if already set.  In this example the thermal power of region 2 is stepped by adding the
{bold} POWERSTEP NSTEPS 
and
{bold} STEPREGION 
parameters.  

{bold} POWER2 
defines the initial thermal power for region #2.  
{bold} POWERSTEP 
determines the size of the power step, 
{bold} NSTEPS 
sets the number of power steps to be performed and the
{bold} STEPREGION 
option determines which region to step as the thermal power of any region may be specified on the 
{bold} solve 
statement.

The final 3D thermal distribution is saved to the file specified by the 
{bold} outfile 
parameter. The output file name rightmost characters will be incremented alphanumerically so a different file will be saved for each step. These can be viewed in TonyPlot 3D.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




{subsection} thermalex07.in : Simple Simulation with Temperature and Power Stepping

Requires: DevEdit 3D/Thermal 3D
{newline}
Minimum Versions: Atlas 5.26.1.R

This example runs thermal simulation of a 2 transistors. The main sequential tasks are:

{bullet} Specification of two neighboring transistor regions in DevEdit 3D
{newline}
{bullet} Specification of heat sinks in in DevEdit 3D
{newline}
{bullet} Interface to Atlas
{newline}
{bullet} Selection of thermal models and material parameters
{newline}
{bullet} Specification of temperature and power stepping parameters
{newline}
{bullet} Solution of temperature distributions at different temperatures and thermal powers

The structure in this example is defined using DevEdit 3D. Initially
the structure was defined using the graphical mode of DevEdit 3D. After
the mesh was created, a command file was saved from DevEdit 3D enabling the
structure to be re-created in DeckBuild.

The structure used here consists of two neighboring transistors
embedded in a substrate material. For thermal modeling the transistors
are considered only as heat sources. No internal details of the
transistors are considered. An Aluminum region is defined as an 
{bold} electrode 
on the bottom of the substrate material. This will act in
Atlas as a thermal rather than an electrical boundary condition.

The
{bold} go atlas 
statement automatically interfaces DevEdit 3D to Atlas. On reading the
three dimensional mesh file, Atlas will automatically enter 3D mode.

The material statement is used to define the thermal conductivities of each region using the 
{bold} tc.const 
parameter. This parameter sets a constant value for thermal
conductivity. Later examples show regions with temperature dependent
thermal conductivities. The
{bold} power 
parameter sets the thermal output of the region. This naturally defines these regions at heat sources. 

The command
{bold} models thermal 
is all that is required to enable the 3D thermal calculations. The final stage sets
{bold} solve t1=300
. This defines the temperature of the heat sink (or electrode) number 1. 
In this example the temperature on electrode 1 and the power of region 2 are  stepped by adding the 
{bold} POWERSTEP TEMPSTEP NSTEPS STEPREGION
and
{bold} electrode 
parameters.  
{bold} POWERSTEP 
and
{bold} TEMPSTEP 
determine the size of the power and temperature steps and the
{bold} NSTEPS 
parameter gives the number of steps to be performed.  The 
{bold} STEPREGION 
and
{bold} electrode 
parameters identify which region and electrode to step, as more than one region thermal 
power and electrode temperature can be defined on the 
{bold} solve 
statement.  The final 3D thermal distribution is saved to the file specified by the 
{bold} outfile 
parameter. The output file name rightmost characters will be incremented alphanumerically, 
so a different file will be saved for each step.  These can be viewed in TonyPlot 3D.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.



{subsection} thermalex08.in : Infrared Heat Lamp Annealing in Vacuum with Radiative Cooling

Requires: Thermal3D
{newline}
Minimum Versions: Atlas 5.26.1.R

When a wafer is clamped only at it edges and is heated with an infra-red 
source in a vacuum, the majority of the heat loss occurs through 
{bold} black body radiation.
The vacuum prevents thermal conduction mechanisms for the majority of the 
wafer area.  It is also important to realize that if both sides of the wafer
are exposed to the vacuum without contact to a conductive heat sink, both the
front and back sides of the wafer will radiate heat and so black body heat 
radiation must be simulated from both surfaces for accurate results.
 
In Atlas, black body radiation is simulated with an additional logical 
parameter, 
{bold} "BLACKBODY"
added to the 
{bold} "THERMCONTACT"
statement.  This allows the user to set up multiple thermally radiative 
boundary conditions in their structure.

The power per unit area lost to black body radiation for an ideal radiator,
is known absolutely for any given temperature, K.  The power absorbed by 
that same body from it's surroundings, is also known absolutely from the 
temperature of those surroundings.  The nett power loss or gain, to or 
from, any body by infra-red radiation, is therefore simply the difference 
between the power lost to it's surrounds and the power absorbed from it's 
surroundings.

The formula in Atlas is given by:

{bold} { ALPHA (T - EXT.TEMP) }  +  { STEFAN ( T^4 - EXT.TEMP^4) }  W/cm^2
 
Where:-

{bold} "ALPHA"
is the coefficient to take account of thermal conductivity to
the wafer holder, and should be set to zero if all the heat loss is
through radiative processes only,

{bold} "T"
is the temperature of the surface calculated by Atlas,

{bold} "EXT.TEMP"
is the external temperature of the surroundings, 
usually 300K if the equipment in normal laboratory conditions,

{bold} "STEFAN"
is the black body radiation constant.

For reflective surfaces, the 
{bold} surface emissivity
correction can be taken account of by reducing the value of the 
{bold} "STEFAN" 
parameter from the ideal black body radiation value of 
5.67051x10^-12 W/cm2/K^4, which is the default value.  The area of the 
thermal contact is also calculated by Atlas by integration of the area 
of all mesh points in contact with the user defined thermal contact.

So in summary, for an ideal black body radiator, only the background 
temperature 
{bold} "EXT.TEMP" 
need be specified on the 
{bold} "THERMCONTACT" 
statement,the rest will be calculated by Atlas.  For reflective surfaces, 
with less than ideal radiation characteristics, the 
{bold} effective emissivity coefficient 
can be taken account of by using the appropriate value of the 
{bold} "STEFAN"
parameter.  Simply multiply the default value of "STEFAN" by the 
emissivity coefficient.  For pure radiative cooling, also set the thermal 
conductivity coefficient, 
{bold} "ALPHA" 
to zero.

To load and run this example, select the
{bold} Load
button in DeckBuild > Examples. This will copy the input file and any support files to your current working directory. Select the
{bold} Run
button in DeckBuild to execute the example.




